apiVersion: v1
metadata:
  name: {{ template "backend.name" . }}-envoy-config
kind: ConfigMap
data:
  config.yaml: |+
    static_resources:
      listeners:

      - name: inference_http
        address:
          socket_address:
            address: 0.0.0.0
            port_value: {{ .Values.envoy.httpPort }}
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: grpc_json
              codec_type: AUTO
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: backend
                      timeout: 60s
              http_filters:
              - name: envoy.filters.http.router
              - name: envoy.filters.http.grpc_json_transcoder
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                  proto_descriptor: "/app/inference.pb"
                  services: ["floorplan.Service"]
                  print_options:
                    add_whitespace: true
                    always_print_primitive_fields: true
                    always_print_enums_as_ints: false
                    preserve_proto_field_names: false

      - name: inference_grpc
        address:
          socket_address:
            address: 0.0.0.0
            port_value: {{ .Values.envoy.grpcPort }}
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              codec_type: HTTP2
              use_remote_address: true
              stream_idle_timeout: {{ .Values.envoy.stream_idle_timeout }}
              access_log:
                - name: envoy.access_loggers.file
                  typed_config:
                    "@type": type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog
                    path: /dev/stdout
                    json_format:
                      {{- tpl (.Files.Get "resources/envoy_access_log_config.json") . | indent 16 }}
              http_filters:
                - name: envoy.filters.http.router
              route_config:
                name: local_route
                virtual_hosts:
                  - name: local_service
                    domains: ["*"]
                    routes:
                    - match:
                        prefix: "/"
                        grpc: {}
                      route:
                        cluster: backend
                        timeout: 60s

      clusters:
      - name: backend
        connect_timeout: 300s
        type: LOGICAL_DNS
        lb_policy: ROUND_ROBIN
        dns_lookup_family: V4_ONLY
        typed_extension_protocol_options:
          envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
            "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
            explicit_http_config:
              http2_protocol_options: {}
        load_assignment:
          cluster_name: backend
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: {{ .Values.backend.port }}
